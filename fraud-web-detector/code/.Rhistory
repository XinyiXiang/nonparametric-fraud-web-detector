p <- pnorm(6*365.25,40 * mean,sqrt(500)/sqrt(40)) # probability that 40 components together will last 6 year
T_mean = 40 * mean
T_std = std/sqrt(40)
p <- pnorm(6*365.25,T_mean,T_std) # probability that 40 components together will last 6 year
p <- qnorm(6*365.25,T_mean,T_std) # probability that 40 components together will last 6 year
p <- qnorm(6*365.25,mean=T_mean,sd=T_std) # probability that 40 components together will last 6 year
p
T_mean = 40 * mean
T_std = std/sqrt(40)
p <- pnorm(6*365.25,mean=T_mean,sd=T_std) # probability that 40 components together will last 6 year
p
pnorm(0)
alpha = 5
beta = 10
mean <- alpha*beta # mean of a gamma function
std <- sqrt(alpha)/beta # standard deviation of a gamma function
T_mean = 40 * mean
T_std = std/sqrt(40)
std <- sqrt(alpha*beta^2) # standard deviation of a gamma function
T_std = std/sqrt(40)
p <- pnorm(6*365.25,mean=T_mean,sd=T_std) # probability that 40 components together will last 6 year
xpnorm(q/40,mean = mean, sd = sqrt(500)/sqrt(40)) %>%
gf_labs(title = "Distribution of T, length of time 40 components last", x = "") %>%
gf_theme(theme_bw())
xpnorm(q/40,mean = mean, sd = sqrt(500)/sqrt(40)) +
gf_labs(title = "Distribution of T, length of time 40 components last", x = "") %>%
gf_theme(theme_bw())
# load libraries
library(mosaic)
library(tidyverse)
xpnorm(q/40,mean = mean, sd = sqrt(500)/sqrt(40)) +
gf_labs(title = "Distribution of T, length of time 40 components last", x = "") %>%
gf_theme(theme_bw())
xpnorm(q/40,mean = mean, sd = sqrt(500)/sqrt(40)) +
gf_labs(title = "Distribution of T, length of time 40 components last", x = "") %>%
gf_theme(theme_bw())
p <- pnorm(6*365.25,mean=T_mean,sd=T_std, lower.tail = TRUE) # probability that 40 components together will last 6 year
p
p <- 1- pnorm(6*365.25,mean=T_mean,sd=T_std, lower.tail = TRUE) # probability that 40 components together will last 6 year
# STAT341 HW4
## Problem 3b
n <- 6
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ pi, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
library(fastR2)
n <- 6
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
install.packages("fastR2")
install.packages("fastR2")
p1+p2
# STAT341 HW4
## Problem 3b
library(patchwork)
library(fastR2)
n <- 6
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
n <- 400
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ pi, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
n <- 400
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
n <- 6
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
n <- 400
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
p1+p2
n <- 400
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
n <- 6
p1 <- gf_fun(pi*(1-pi)/n ~ pi, xlim = c(0,1))  + coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c01")
p2 <- gf_fun((n/4)/(n+sqrt(n))^2 ~ n, xlim = c(0,1), lty=3) +coord_cartesian(ylim=c(0,0.5)) +labs(x = expression(paste(pi)),y = "MSE",title="MSE of estimator \u03c02")
pwd
wd
shiny::runApp('Documents/GitHub/STAT499/Test')
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
udo su - -c "R -e \"install.packages('shinydashboard', repos='http://cran.rstudio.com/')\""
sudo su - -c "R -e \"install.packages('shinydashboard', repos='http://cran.rstudio.com/')\""
install.packages("shinydashboard")
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
install.packages("shinythemes")
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
sessionInfo()
R
R.Version()
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
install.packages("h2o==3.24.0.2")
#temp=sample_frac(data,i)
temp = head(data, i * sample(85:100, 1))
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
getwd()
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
source("~/Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector/stream_generate.R")
spec()
runApp('Documents/GitHub/STAT499/fraud-web-detector/credit-card-fraud-detector')
quit()
# STAT 341 - hw5
## Prob 1 - part c
pbinom(8, size=12, prob=0.5, lower.tail=False)
# STAT 341 - hw5
## Prob 1 - part c
pbinom(8, size=12, prob=0.5, lower.tail=F)
pnbinom(4, size=12, prob=0.5, lower.tail=F)
pnbinom(8, size=12, prob=0.5, lower.tail=F)
pnbinom(8, size=12, prob=0.5, lower.tail=T)
pnbinom(4, size=12, prob=0.5, lower.tail=T)
1-pnbinom(4, size=12, prob=0.5, lower.tail=T)
1-pnbinom(8, size=12, prob=0.5, lower.tail=T)
1-pnbinom(8, size=12, prob=0.5, lower.tail=F)
pnbinom(29, size=12, prob=0.5, lower.tail=T) - pnbinom(2, size=12, prob=0.5, lower.tail=T)
pnbinom(9, size=12, prob=0.5, lower.tail=T) - pnbinom(2, size=12, prob=0.5, lower.tail=T)
# STAT 341 - hw5
## Prob 1 - part c
pbinom(8, size=12, prob=0.5, lower.tail=F)
# STAT 341 - hw5
## Prob 1 - part c
pbinom(8, size=12, prob=0.5, lower.tail=F)
pnbinom(9, size=3, prob=0.5, lower.tail=T) - pnbinom(2, size=3, prob=0.5, lower.tail=T)
## Prob 4 - part b
FDR <- 0.05 * 0.85 / (0.05 * 0.85 + 0.95 * 0.05)
2b <- pnbinom(9, size=3, prob=0.5, lower.tail=T) - pnbinom(2, size=3, prob=0.5, lower.tail=T)
twob <- pnbinom(9, size=3, prob=0.5, lower.tail=T) - pnbinom(2, size=3, prob=0.5, lower.tail=T)
# STAT 341 - hw5
## Prob 1 - part c
1 - pnbinom(8, 3, \frac{1}{2})
# STAT 341 - hw5
## Prob 1 - part c
1 - pnbinom(8, 3, 0.5)
## Prob 4 - part b
FDR <- 0.05 * 0.85 / (0.05 * 0.85 + 0.95 * 0.15)
## Prob 4 - part b
FDR <- 0.05 * 0.85 / (0.05 * 0.85 + 0.85 * 0.15)
binom(3,1)
dnbinom(1,3,0.5)
dnbinom(2,3,0.5)
dnbinom(3,3,0.5)
dnbinom(4,3,0.5)
dnbinom(5,3,0.5)
dnbinom(6,3,0.5)
dnbinom(7,3,0.5)
dnbinom(8,3,0.5)
dnbinom(9,3,0.5)
dnbinom(10,3,0.5)
dnbinom(11,3,0.5)
dnbinom(12,3,0.5)
dnbinom(12,3,0.5) + dnbinom(11,3,0.5) + dnbinom(10,3,0.5)
dnbinom(12,3,0.5) + dnbinom(11,3,0.5) + dnbinom(10,3,0.5) + dnbinom(9,3,0.5)
dnbinom(12,3,0.5) + dnbinom(11,3,0.5) + dnbinom(10,3,0.5) + dnbinom(9,3,0.5) + dnbinom(8,3,0.5)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / theta), theta = clim(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
# STAT 341 - hw5
library(ggplot2)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / theta), theta = clim(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
library(fastR2)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / theta), theta = clim(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / x), xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / x), xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlabs = "Theta" ,
ylabs = "Type II Error Rate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta" ,
ylab="Type II Error Rate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta" ,
ylab="TypeIIErrorRate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) %>% +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) + labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
p1
? gf_fun
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) %>%
gf_labs(
title = expression(paste(
"Type II error in variation of ", theta),
x="Theta",
y="TypeIIErrorRate"
)
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) %>%
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
xlab="Theta",
ylab="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2 / x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(x, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(x, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
# STAT 341 - hw5
library(ggplot2)s
library(fastR2)
## Prob 1 - part c
1 - pnbinom(8, 3, 0.5)
## Prob 3 - part b
p1 <- gf_fun(pexp(x, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
# STAT 341 - hw5
library(ggplot2)
library(fastR2)
## Prob 1 - part c
1 - pnbinom(8, 3, 0.5)
## Prob 3 - part b
p1 <- gf_fun(pexp(-3.2/x, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(-3.2, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(-x, rate = 1, lower.tail = TRUE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(-x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(pexp(-3.2/x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-pexp(-3.2/x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="TypeIIErrorRate"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-pexp(-3.2/x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Type II error in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error Rate (H1 is rejected when not supposed to)"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-pexp(-3.2/x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error Rate (H1 is rejected when not supposed to)"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-pexp(-3.2/x, rate = 1, lower.tail = FALSE, log.p = FALSE) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2/x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2/x) ~ x, xlim = c(1,50)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-exp(-3.2/x) ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(1/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(3.2/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(-3.2/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(3.2/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(1/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error Rate (H1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(1/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error (H1:", theta, "> 1 is rejected when not supposed to) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
## Prob 3 - part b
p1 <- gf_fun(1/x ~ x, xlim = c(1,100)) +
labs(title = expression(paste(
"Probability of getting Type II Error (H1:", theta, "> 1 is rejected when actually true) in variation of ", theta)),
x="Theta",
y="Probability of getting Type II Error"
)
p1
shiny::runApp('Documents/GitHub/STAT499/fraud-web-detector/code')
setwd("~/Documents/GitHub/STAT499/fraud-web-detector/code")
library(farff) #Read .arff data
library(randomForest) #Random Forest function
library(caret) # Confusion Matrix function
